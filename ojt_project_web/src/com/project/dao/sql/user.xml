<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="user">
	
	<!-- 로그인 check(종합) -->
	<select id="userIdcheck" resultType="hashmap">
		SELECT
			NAME,
			USER_NUMBER,
			USER_KIND,
			PASSWORD
		FROM USER
		WHERE EMAIL = #{email}
		LIMIT 1
	</select>
	
	<!--SALT 값 확인  -->
	<select id="findsalt" resultType="hashmap">
		SELECT
			SALT
		FROM SALT
		WHERE USER_NUMBER = #{user_number}
		LIMIT 1
	</select>
	
	<!-- 회원 가입 -->
	<insert id="regist">
		INSERT INTO USER(
				EMAIL,
				PASSWORD,
				NAME,
				BIRTHDATE,
				USER_CALL,
				GENDER,
				USER_KIND
			) 
			VALUES(
				#{id},
				#{pwd},
				#{name},
				#{birthdate},
				#{call},
				#{gender},
				#{userkind}
			)
	</insert>
	
	<!-- 사용자 salt 저장 -->
	<insert id="insertSalt">
		INSERT INTO SALT(
			USER_NUMBER,
			SALT
		)
		VALUES(
			#{user_number},
			#{salt}
		)
	</insert>
	
	<!-- email 중복 확인 -->
	<select id="idExist" resultType="hashmap">
		SELECT EXISTS
			(SELECT
				USER_NUMBER
			FROM USER
			WHERE EMAIL = #{email} 
			LIMIT 1) AS SUCCESS
	</select>
	
	<!-- 사용자 정보 가져오기 -->
	<select id="getMyInfo" resultType="hashmap">
		SELECT
		NAME AS USER_NAME,
		EMAIL AS USER_EMAIL ,
		BIRTHDATE AS USER_BIRTH,
		USER_CALL ,
		GENDER AS USER_GENDER
		FROM user u 
		WHERE u.USER_NUMBER = #{userNum}
	</select>
	
	<!-- 사용자 정보 삭제(회원 탈퇴) -->
	<delete id="deleteUserInfo">
		DELETE FROM user
		WHERE USER_NUMBER = #{userNum}
	</delete>
	
	<!-- 사용자 정보 업데이트 -->
	<update id="updateUserInfo">
		UPDATE user
		SET 
			NAME = #{USER_NAME}, 
			USER_CALL = #{USER_CALL},
			GENDER = #{USER_GENDER}
		WHERE 
			USER_NUMBER = #{USER_NUMBER};
	</update>
</mapper>