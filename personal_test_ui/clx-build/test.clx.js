/*
 * App URI: test
 * Source Location: test.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("test", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * test.js
			 * Created at 2021. 12. 30. 오전 8:41:25.
			 *
			 * @author SeongSoo
			 ************************************************/
			
			
			
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				app.lookup("smsOnLoad").send()
			}
			
			
			
			
			
			/*
			 * "조회" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				
				app.lookup("smsSearchEmail").send();
				
			}
			
			
			/*
			 * 사용자 정의 컨트롤에서 save 이벤트 발생 시 호출.
			 */
			function onIDSSave(/* cpr.events.CAppEvent */ e){
				/** 
				 * @type udc.IDS
				 */
				var iDS = e.control;
				app.lookup("smsSave").send();
			}
			
			
			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onSmsSaveSubmitSuccess(/* cpr.events.CSubmissionEvent */ e){
				/** 
				 * @type cpr.protocols.Submission
				 */
				var smsSave = e.control;
				app.lookup("btnsearch").click();
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsList");
			dataSet_1.parseData({
				"info": "USER_TEST@EMAIL",
				"columns": [
					{
						"name": "FIRSTNAME",
						"dataType": "string"
					},
					{"name": "LASTNAME"},
					{"name": "PHONE_NUMBER"},
					{"name": "AGE"},
					{
						"name": "NAME",
						"dataType": "expression",
						"displayOnly": true,
						"expression": "FIRSTNAME + LASTNAME"
					},
					{"name": "EMAIL"}
				]
			});
			app.register(dataSet_1);
			var dataMap_1 = new cpr.data.DataMap("dmEmail");
			dataMap_1.parseData({
				"columns" : [{
					"name": "EMAIL",
					"defaultValue": ""
				}]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("smsOnLoad");
			submission_1.action = "/user/onload.do";
			submission_1.addResponseData(dataSet_1, false);
			if(typeof onSmsOnLoadSubmitSuccess == "function") {
				submission_1.addEventListener("submit-success", onSmsOnLoadSubmitSuccess);
			}
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("smsSearchEmail");
			submission_2.action = "/user/searchEmail.do";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_1, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("smsSave");
			submission_3.action = "/user/save.do";
			submission_3.addRequestData(dataSet_1);
			if(typeof onSmsSaveSubmitSuccess == "function") {
				submission_3.addEventListener("submit-success", onSmsSaveSubmitSuccess);
			}
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			group_1.style.setClasses(["search-box"]);
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.scrollable = false;
			formLayout_1.topMargin = "0px";
			formLayout_1.rightMargin = "0px";
			formLayout_1.bottomMargin = "0px";
			formLayout_1.leftMargin = "0px";
			formLayout_1.horizontalSpacing = "10px";
			formLayout_1.verticalSpacing = "10px";
			formLayout_1.setColumns(["100px", "1fr", "100px"]);
			formLayout_1.setRows(["1fr"]);
			group_1.setLayout(formLayout_1);
			(function(container){
				var button_1 = new cpr.controls.Button("btnsearch");
				button_1.value = "조회";
				if(typeof onButtonClick == "function") {
					button_1.addEventListener("click", onButtonClick);
				}
				container.addChild(button_1, {
					"colIndex": 2,
					"rowIndex": 0
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbSearch");
				inputBox_1.bind("value").toDataMap(app.lookup("dmEmail"), "EMAIL");
				container.addChild(inputBox_1, {
					"colIndex": 1,
					"rowIndex": 0
				});
				var output_1 = new cpr.controls.Output();
				output_1.value = "Email";
				container.addChild(output_1, {
					"colIndex": 0,
					"rowIndex": 0
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "10px",
				"right": "20px",
				"left": "20px",
				"height": "30px"
			});
			
			var userDefinedControl_1 = linker.userDefinedControl_1 = new udc.IDS();
			if(typeof onIDSSave == "function") {
				userDefinedControl_1.addEventListener("save", onIDSSave);
			}
			container.addChild(userDefinedControl_1, {
				"top": "50px",
				"right": "20px",
				"width": "300px",
				"height": "30px"
			});
			
			var grid_1 = linker.grid_1 = new cpr.controls.Grid("grd1");
			grid_1.init({
				"dataSet": app.lookup("dsList"),
				"columnMovable": true,
				"autoFit": "8",
				"columns": [
					{"width": "25px"},
					{"width": "50px"},
					{"width": "50px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "150px"},
					{"width": "50px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
								cell.columnType = "checkbox";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.text = "F";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.targetColumnName = "NAME";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "NAME";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.targetColumnName = "FIRSTNAME";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "FIRSTNAME";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 5},
							"configurator": function(cell){
								cell.targetColumnName = "LASTNAME";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "LASTNAME";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 6},
							"configurator": function(cell){
								cell.targetColumnName = "PHONE_NUMBER";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "PHONE_NUMBER";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 7},
							"configurator": function(cell){
								cell.targetColumnName = "AGE";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "AGE";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 8},
							"configurator": function(cell){
								cell.targetColumnName = "EMAIL";
								cell.text = "EMAIL";
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnType = "checkbox";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.control = (function(){
									var output_2 = new cpr.controls.Output();
									return output_2;
								})();
								cell.controlConstraint = {};
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.columnType = "rowindex";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.columnName = "NAME";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.columnName = "FIRSTNAME";
								cell.control = (function(){
									var inputBox_2 = new cpr.controls.InputBox("ipb2");
									inputBox_2.bind("value").toDataColumn("FIRSTNAME");
									return inputBox_2;
								})();
								cell.controlConstraint = {};
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 5},
							"configurator": function(cell){
								cell.columnName = "LASTNAME";
								cell.control = (function(){
									var inputBox_3 = new cpr.controls.InputBox("ipb3");
									inputBox_3.bind("value").toDataColumn("LASTNAME");
									return inputBox_3;
								})();
								cell.controlConstraint = {};
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 6},
							"configurator": function(cell){
								cell.columnName = "PHONE_NUMBER";
								cell.control = (function(){
									var maskEditor_1 = new cpr.controls.MaskEditor("mse1");
									maskEditor_1.mask = "000-0000-0000";
									maskEditor_1.bind("value").toDataColumn("PHONE_NUMBER");
									return maskEditor_1;
								})();
								cell.controlConstraint = {"horizontalAlign": "fill"};
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 7},
							"configurator": function(cell){
								cell.columnName = "AGE";
								cell.control = (function(){
									var numberEditor_1 = new cpr.controls.NumberEditor("nbe1");
									numberEditor_1.min = 0.0;
									numberEditor_1.max = 200.0;
									numberEditor_1.bind("value").toDataColumn("AGE");
									return numberEditor_1;
								})();
								cell.controlConstraint = {};
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 8},
							"configurator": function(cell){
								cell.columnName = "EMAIL";
								cell.control = (function(){
									var inputBox_4 = new cpr.controls.InputBox("ipb4");
									inputBox_4.bind("value").toDataColumn("EMAIL");
									return inputBox_4;
								})();
								cell.controlConstraint = {};
							}
						}
					]
				}
			});
			container.addChild(grid_1, {
				"top": "100px",
				"right": "20px",
				"left": "20px",
				"height": "382px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_1.grd = linker.grid_1;
		}
	});
	app.title = "test";
	cpr.core.Platform.INSTANCE.register(app);
})();
