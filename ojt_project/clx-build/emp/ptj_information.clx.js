/*
 * App URI: emp/ptj_information
 * Source Location: emp/ptj_information.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("emp/ptj_information", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * ptj_information.js
			 * Created at 2022. 1. 4. 오후 3:28:42.
			 *
			 * @author SeongSoo
			 ************************************************/;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsptjList");
			dataSet_1.parseData({
				"columns": [
					{
						"name": "이름",
						"dataType": "string"
					},
					{"name": "은행명"},
					{"name": "계좌번호"},
					{"name": "연락처"},
					{"name": "급여 형태"}
				],
				"rows": [{"이름": "이름1", "은행명": "은행명1", "계좌번호": "계좌번호1", "연락처": "연락처1", "급여 형태": "급여 형태1"}]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsworktime");
			dataSet_2.parseData({
				"columns": [
					{"name": "근무 일자"},
					{"name": "시작시간"},
					{"name": "종료시간"},
					{
						"name": "실제 근무 시간",
						"dataType": "expression",
						"displayOnly": true,
						"expression": "종료시간 - 시작시간 - 휴게시간"
					},
					{"name": "휴게 시간"}
				],
				"rows": [
					{"근무 일자": "근무 일자1", "시작시간": "시작시간1", "종료시간": "종료시간1", "휴게 시간": "휴게 시간1"},
					{"근무 일자": "근무 일자2", "시작시간": "시작시간2", "종료시간": "종료시간2", "휴게 시간": "휴게 시간2"},
					{"근무 일자": "근무 일자3", "시작시간": "시작시간3", "종료시간": "종료시간3", "휴게 시간": "휴게 시간3"},
					{"근무 일자": "근무 일자4", "시작시간": "시작시간4", "종료시간": "종료시간4", "휴게 시간": "휴게 시간4"},
					{"근무 일자": "근무 일자5", "시작시간": "시작시간5", "종료시간": "종료시간5", "휴게 시간": "휴게 시간5"},
					{"근무 일자": "근무 일자6", "시작시간": "시작시간6", "종료시간": "종료시간6", "휴게 시간": "휴게 시간6"},
					{"근무 일자": "근무 일자7", "시작시간": "시작시간7", "종료시간": "종료시간7", "휴게 시간": "휴게 시간7"}
				]
			});
			app.register(dataSet_2);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			var dataRowContext_1 = new cpr.bind.DataRowContext(app.lookup("dsptjList"), 0);
			group_1.setBindContext(dataRowContext_1);
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.scrollable = false;
			formLayout_1.topMargin = "0px";
			formLayout_1.rightMargin = "0px";
			formLayout_1.bottomMargin = "0px";
			formLayout_1.leftMargin = "0px";
			formLayout_1.horizontalSpacing = "0px";
			formLayout_1.verticalSpacing = "0px";
			formLayout_1.setColumns(["70px", "1fr", "70px", "1fr", "100px", "1fr", "100px", "1fr", "100px", "1fr"]);
			formLayout_1.setRows(["1fr"]);
			group_1.setLayout(formLayout_1);
			(function(container){
				var output_1 = new cpr.controls.Output();
				output_1.value = "이름";
				output_1.style.css({
					"text-align" : "center"
				});
				container.addChild(output_1, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var output_2 = new cpr.controls.Output();
				output_2.value = "은행명";
				output_2.style.css({
					"text-align" : "center"
				});
				container.addChild(output_2, {
					"colIndex": 2,
					"rowIndex": 0
				});
				var output_3 = new cpr.controls.Output();
				output_3.value = "계좌번호";
				output_3.style.css({
					"text-align" : "center"
				});
				container.addChild(output_3, {
					"colIndex": 4,
					"rowIndex": 0
				});
				var output_4 = new cpr.controls.Output();
				output_4.value = "연락처";
				output_4.style.css({
					"text-align" : "center"
				});
				container.addChild(output_4, {
					"colIndex": 6,
					"rowIndex": 0
				});
				var output_5 = new cpr.controls.Output();
				output_5.value = "급여 형태";
				output_5.style.css({
					"text-align" : "center"
				});
				container.addChild(output_5, {
					"colIndex": 8,
					"rowIndex": 0
				});
				var output_6 = new cpr.controls.Output();
				output_6.bind("value").toDataColumn("이름");
				container.addChild(output_6, {
					"colIndex": 1,
					"rowIndex": 0
				});
				var output_7 = new cpr.controls.Output();
				output_7.bind("value").toDataColumn("은행명");
				container.addChild(output_7, {
					"colIndex": 3,
					"rowIndex": 0
				});
				var output_8 = new cpr.controls.Output();
				output_8.bind("value").toDataColumn("계좌번호");
				container.addChild(output_8, {
					"colIndex": 5,
					"rowIndex": 0
				});
				var output_9 = new cpr.controls.Output();
				output_9.bind("value").toDataColumn("연락처");
				container.addChild(output_9, {
					"colIndex": 7,
					"rowIndex": 0
				});
				var output_10 = new cpr.controls.Output();
				output_10.bind("value").toDataColumn("급여 형태");
				container.addChild(output_10, {
					"colIndex": 9,
					"rowIndex": 0
				});
			})(group_1);
			container.addChild(group_1, {
				"width": "400px",
				"height": "30px"
			});
			
			var group_2 = new cpr.controls.Container();
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_2.distribution = "trailing";
			group_2.setLayout(verticalLayout_2);
			(function(container){
				var userDefinedControl_1 = new udc.crudUDC();
				container.addChild(userDefinedControl_1, {
					"width": "300px",
					"height": "30px"
				});
			})(group_2);
			container.addChild(group_2, {
				"autoSize": "none",
				"width": "400px",
				"height": "30px"
			});
			
			var group_3 = new cpr.controls.Container();
			// Layout
			var formLayout_2 = new cpr.controls.layouts.FormLayout();
			formLayout_2.scrollable = false;
			formLayout_2.topMargin = "5px";
			formLayout_2.rightMargin = "5px";
			formLayout_2.bottomMargin = "5px";
			formLayout_2.leftMargin = "5px";
			formLayout_2.horizontalSpacing = "5px";
			formLayout_2.verticalSpacing = "5px";
			formLayout_2.setColumns(["500px", "1fr"]);
			formLayout_2.setRows(["1fr"]);
			group_3.setLayout(formLayout_2);
			(function(container){
				var calendar_1 = new cpr.controls.Calendar();
				(function(calendar_1){
				})(calendar_1);
				container.addChild(calendar_1, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var grid_1 = new cpr.controls.Grid("grd1");
				grid_1.init({
					"dataSet": app.lookup("dsworktime"),
					"columns": [
						{"width": "25px"},
						{"width": "50px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"}
					],
					"header": {
						"rows": [{"height": "24px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.filterable = false;
									cell.sortable = false;
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.filterable = false;
									cell.sortable = false;
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.targetColumnName = "근무 일자";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "근무 일자";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.targetColumnName = "시작시간";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "시작시간";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.targetColumnName = "종료시간";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "종료시간";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.targetColumnName = "실제 근무 시간";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "실제 근무 시간";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.targetColumnName = "휴게 시간";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "휴게 시간";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "24px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnType = "rowindex";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "근무 일자";
									cell.control = (function(){
										var dateInput_1 = new cpr.controls.DateInput("dti1");
										dateInput_1.bind("value").toDataColumn("근무 일자");
										return dateInput_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "시작시간";
									cell.control = (function(){
										var inputBox_1 = new cpr.controls.InputBox("ipb1");
										inputBox_1.bind("value").toDataColumn("시작시간");
										return inputBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "종료시간";
									cell.control = (function(){
										var inputBox_2 = new cpr.controls.InputBox("ipb2");
										inputBox_2.bind("value").toDataColumn("종료시간");
										return inputBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "실제 근무 시간";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "휴게 시간";
									cell.control = (function(){
										var inputBox_3 = new cpr.controls.InputBox("ipb3");
										inputBox_3.bind("value").toDataColumn("휴게 시간");
										return inputBox_3;
									})();
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"colIndex": 1,
					"rowIndex": 0
				});
			})(group_3);
			container.addChild(group_3, {
				"width": "400px",
				"height": "315px"
			});
		}
	});
	app.title = "ptj_information";
	cpr.core.Platform.INSTANCE.register(app);
})();
