/*
 * App URI: ptj/schedule
 * Source Location: ptj/schedule.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("ptj/schedule", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * schedule.js
			 * Created at 2022. 1. 5. 오전 11:23:01.
			 *
			 * @author SeongSoo
			 ************************************************/
			
			
			/*
			 * "근무지 관리" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				app.openDialog("ptj/DialogWPM", {width : 400, height : 550}, function(dialog){
					dialog.ready(function(dialogApp){
						// 필요한 경우, 다이얼로그의 앱이 초기화 된 후, 앱 속성을 전달하십시오.
					});
				}).then(function(returnValue){
					alert("성공");
				});
			}
			
			
			/*
			 * 캘린더에서 date-click 이벤트 발생 시 호출.
			 * Calendar의 날짜를 클릭 했을때 발생하는 이벤트.
			 */
			function onCalendarDateClick2(/* cpr.events.CDateEvent */ e){
				/** 
				 * @type cpr.controls.Calendar
				 */
				var calendar = e.control;
				app.openDialog("ptj/Dialog_date_information", {width : 400, height : 550}, function(dialog){
					dialog.ready(function(dialogApp){
						// 필요한 경우, 다이얼로그의 앱이 초기화 된 후, 앱 속성을 전달하십시오.
					});
				}).then(function(returnValue){
					alert("성공");
				});
			}
			
			
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				var grp = app.lookup("grpToday");
				
				var dataset = app.lookup("dstoday");
				
				for(var i = 0 ; i < dataset.getRowCount() ; i++){
					var tj = new udc.todayJop();
					tj.wherejob = dataset.getValue(i, "wherejob");
					tj.start_time = dataset.getValue(i, "start_time");
					tj.end_time = dataset.getValue(i, "end_time");
					tj.total_time = dataset.getValue(i, "total_time");
					
					grp.addChild(tj, {
						autoSize :"none",
						height : "100px",
						width : "100px"
					});
				}
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dstoday");
			dataSet_1.parseData({
				"columns": [
					{"name": "wherejob"},
					{"name": "start_time"},
					{"name": "end_time"},
					{"name": "total_time"}
				],
				"rows": [
					{"wherejob": "근무지 A", "start_time": "09:00", "end_time": "15:00", "total_time": "6"},
					{"wherejob": "근무지 B", "start_time": "16:00", "end_time": "20:00", "total_time": "4"}
				]
			});
			app.register(dataSet_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.scrollable = false;
			formLayout_1.topMargin = "5px";
			formLayout_1.rightMargin = "5px";
			formLayout_1.bottomMargin = "5px";
			formLayout_1.leftMargin = "5px";
			formLayout_1.horizontalSpacing = "10px";
			formLayout_1.verticalSpacing = "10px";
			formLayout_1.setColumns(["100px", "1fr", "150px"]);
			formLayout_1.setRows(["1fr"]);
			group_1.setLayout(formLayout_1);
			(function(container){
				var group_2 = new cpr.controls.Container("grpToday");
				// Layout
				var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
				group_2.setLayout(verticalLayout_1);
				(function(container){
					var group_3 = new cpr.controls.Container();
					// Layout
					var xYLayout_2 = new cpr.controls.layouts.XYLayout();
					group_3.setLayout(xYLayout_2);
					(function(container){
					})(group_3);
					container.addChild(group_3, {
						"width": "400px",
						"height": "60px"
					});
					var output_1 = new cpr.controls.Output();
					output_1.value = "당일 근무 정보";
					output_1.style.css({
						"border-bottom-width" : "1px",
						"border-bottom-style" : "solid"
					});
					container.addChild(output_1, {
						"width": "100px",
						"height": "20px"
					});
				})(group_2);
				container.addChild(group_2, {
					"colIndex": 2,
					"rowIndex": 0,
					"colSpan": 1,
					"rowSpan": 1
				});
				var group_4 = new cpr.controls.Container();
				// Layout
				var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
				group_4.setLayout(verticalLayout_2);
				(function(container){
					var group_5 = new cpr.controls.Container();
					// Layout
					var verticalLayout_3 = new cpr.controls.layouts.VerticalLayout();
					group_5.setLayout(verticalLayout_3);
					(function(container){
					})(group_5);
					container.addChild(group_5, {
						"width": "400px",
						"height": "30px"
					});
					var group_6 = new cpr.controls.Container();
					// Layout
					var verticalLayout_4 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_4.distribution = "trailing";
					group_6.setLayout(verticalLayout_4);
					(function(container){
						var button_1 = new cpr.controls.Button();
						button_1.value = "근무지 리스트";
						if(typeof onButtonClick == "function") {
							button_1.addEventListener("click", onButtonClick);
						}
						container.addChild(button_1, {
							"width": "100px",
							"height": "30px"
						});
					})(group_6);
					container.addChild(group_6, {
						"width": "900px",
						"height": "30px"
					});
					var group_7 = new cpr.controls.Container();
					group_7.style.setClasses(["cl-form-group"]);
					// Layout
					var formLayout_2 = new cpr.controls.layouts.FormLayout();
					formLayout_2.scrollable = false;
					formLayout_2.topMargin = "5px";
					formLayout_2.rightMargin = "5px";
					formLayout_2.bottomMargin = "5px";
					formLayout_2.leftMargin = "5px";
					formLayout_2.horizontalSpacing = "10px";
					formLayout_2.verticalSpacing = "10px";
					formLayout_2.setColumns(["100px", "1fr", "100px", "1fr"]);
					formLayout_2.setRows(["1fr"]);
					group_7.setLayout(formLayout_2);
					(function(container){
						var output_2 = new cpr.controls.Output();
						output_2.value = "주당 근무 시간";
						container.addChild(output_2, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var output_3 = new cpr.controls.Output();
						output_3.value = "당월 근무 시간";
						container.addChild(output_3, {
							"colIndex": 2,
							"rowIndex": 0
						});
						var output_4 = new cpr.controls.Output();
						output_4.value = "Output";
						output_4.style.css({
							"border-bottom-width" : "1px",
							"border-bottom-style" : "solid"
						});
						container.addChild(output_4, {
							"colIndex": 1,
							"rowIndex": 0
						});
						var output_5 = new cpr.controls.Output();
						output_5.value = "Output";
						output_5.style.css({
							"border-bottom-width" : "1px",
							"border-bottom-style" : "solid"
						});
						container.addChild(output_5, {
							"colIndex": 3,
							"rowIndex": 0
						});
					})(group_7);
					container.addChild(group_7, {
						"width": "400px",
						"height": "30px"
					});
					var calendar_1 = new cpr.controls.Calendar();
					(function(calendar_1){
					})(calendar_1);
					if(typeof onCalendarDateClick2 == "function") {
						calendar_1.addEventListener("date-click", onCalendarDateClick2);
					}
					container.addChild(calendar_1, {
						"width": "240px",
						"height": "467px"
					});
				})(group_4);
				container.addChild(group_4, {
					"colIndex": 1,
					"rowIndex": 0,
					"colSpan": 1,
					"rowSpan": 1
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "10px",
				"right": "10px",
				"left": "10px",
				"height": "590px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "schedule";
	cpr.core.Platform.INSTANCE.register(app);
})();
